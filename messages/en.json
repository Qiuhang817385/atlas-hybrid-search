{
  "app": {
    "title": "Atlas Hybrid Search Tester",
    "searchPlaceholder": "Enter your search query...",
    "vectorSearch": "Vector Search",
    "showIndexes": "Show Indexes",
    "sampleDoc": "Sample Doc"
  },
  "tabs": {
    "about": "About",
    "fulltextSearch": "Fulltext Search",
    "vectorSearch": "Vector Search",
    "relativeScoreFusion": "Relative Score Fusion",
    "reciprocalRankFusion": "Reciprocal Rank Fusion",
    "semanticBoosting": "Semantic Boosting",
    "rerankFusion": "Rerank Fusion"
  },
  "about": {
    "title": "About this application",
    "description": "This app helps you to test different strategies for combining lexical and vector search. You can find source code here:",
    "sourceCodeUrl": "https://github.com/JohnGUnderwood/atlas-hybrid-search",
    "hybridStrategies": "Hybrid strategies",
    "strategiesDescription": "There are four strategies in the app at the moment; Relative Score Fusion, Reciprocal Rank Fusion, Semantic Boosting and Rank Fusion",
    "rsf": {
      "title": "Relative Score Fusion (RSF)",
      "description": "RSF combines the scores from lexical and vector search using a weighted sum. This implementation of RSF uses a sigmoid function, 1/(1+exp(-x)), to normalize lexical and vector scores before combining them."
    },
    "rrf": {
      "title": "Reciprocal Rank Fusion (RRF)",
      "description": "RRF combines lexical and vectors search using a weighted sum of their reciprocal rank. The reciprocal ranks of a result is 1/rank in the result list."
    },
    "semanticBoosting": {
      "title": "Semantic Boosting",
      "description": "In this strategy we use vector search to retrieve a given number of results. We then perform lexical search but boosting the unique ids of the documents returned by the vector search. This done by matching on the _id field and using the vector score as the boost value. The vector score is additive to the overall text score of the document and can be weighted by the user."
    },
    "rerankFusion": {
      "title": "Rerank Fusion",
      "description": "Rerank Fusion combines lexical and vector search using a reranker. We let the reranker decide the best results, ignoring all previous scoring."
    },
    "reranking": {
      "title": "Reranking",
      "rerankResults": "Rerank Results",
      "description": "When the application is run with a reranking model you can select to rerank the returned results from any of the retrieval strategies. This will send the result documents and query to the configued reranking model, which returns a new resorted result set."
    },
    "howToUse": {
      "title": "How to use",
      "description": "Use the Fulltext and Vector search tabs to test your query using just one or other approaches. Then use the other tabs to see how your query performs with different strategies. Have fun!"
    }
  },
  "search": {
    "queryTime": "query took {time}ms",
    "showQuery": "Show Query",
    "useReranker": "Use Reranker",
    "noResults": "No results found for your query",
    "score": "score",
    "semanticallyBoosted": "Semantically Boosted Result",
    "reranked": "RERANKED (score: {score})"
  },
  "modals": {
    "atlasSearch": "Atlas Search",
    "atlasVectorSearch": "Atlas Vector Search",
    "mongodbAggregationPipeline": "MongoDB Aggregation Pipeline"
  },
  "toasts": {
    "cacheHit": "Cache Hit",
    "usedCachedEmbedding": "Used cached embedding for {query}",
    "apiFailure": "API Failure",
    "failedToEncode": "Failed to encode query using embedding model. {error}",
    "failedToAccessCache": "Failed to access query cache. {error}",
    "rerankingFailed": "Reranking failed. {error}"
  },
  "embeddings": {
    "provider": "embeddings: {provider} - {model}",
    "reranking": "reranking: {provider} - {model}"
  },
  "number-of-results-to-return-0": "Number of results to return",
  "how-many-candidates-to-retrieve-from-the-vector-search": "How many candidates to retrieve from the vector search",
  "search-query-failed-error": "Search query failed. {0}",
  "vector-search-params": "Vector Search Params",
  "no-results-select-vector-search-to-run-a-vector-query": "No Results. Select 'Vector Search' to run a vector query."
}
